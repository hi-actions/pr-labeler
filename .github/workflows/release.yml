name: Tag-release

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: pr-label-assign

jobs:
  release:
    name: Release new version
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        go: [ 1.15 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup ENV
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
        run: |
          echo "RELEASE_TAG=${GITHUB_REF:10}" >> $GITHUB_ENV
          echo "RELEASE_NAME=$GITHUB_WORKFLOW" >> $GITHUB_ENV

      # https://github.com/actions/setup-go
      - name: Use Go ${{ matrix.go }}
        timeout-minutes: 3
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Build package
        run: go build -o ./pr-labeber

      # https://github.com/actions/create-release
      - uses: meeDamian/github-release@2.0
        with:
          gzip: false
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_TAG }}
          # files: kite-${{ env.RELEASE_TAG }}.phar

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  # https://docs.github.com/cn/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log into registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
